<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.telpo.pushkit">

    <!--HMS-SDK引导升级HMS功能，访问OTA服务器需要网络权限 | HMS-SDK upgrade HMS Feature, access to OTA server requires network privileges-->
    <uses-permission android:name="android.permission.INTERNET" />
    <!--HMS-SDK引导升级HMS功能，保存下载的升级包需要SD卡写权限 | HMS-SDK upgrade HMS Feature, save downloaded upgrade pack requires SD card Write permission-->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <!--检测网络状态 | Detecting Network status-->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
    <!--检测wifi状态 | Detecting WiFi status-->
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>
    <!--获取用户手机的IMEI，用来唯一的标识设备。 | Gets the IMEI of the user's phone, used to uniquely identify the device.-->
    <uses-permission android:name="android.permission.READ_PHONE_STATE"/>
    <!-- Android O版本调用安装需要使用该权限 -->
    <uses-permission android:name="android.permission.REQUEST_INSTALL_PACKAGES"/>

    <permission
        android:name="${applicationId}.permission.PROCESS_PUSH_MSG"
        android:protectionLevel="signatureOrSystem"/>

    <uses-permission android:name="${applicationId}.permission.PROCESS_PUSH_MSG" />

    <!--PUSH Provider相关权限 -->
<!--    <permission-->
<!--        android:name="${applicationId}.permission.PUSH_PROVIDER"-->
<!--        android:protectionLevel="signatureOrSystem" />-->
<!--    <permission-->
<!--        android:name="${applicationId}.permission.PUSH_WRITE_PROVIDER"-->
<!--        android:protectionLevel="signatureOrSystem" />-->

    <uses-permission android:name="android.permission.GET_TASKS" />
    <!--小米推送权限-->
    <permission
        android:name="${applicationId}.permission.MIPUSH_RECEIVE"
        android:protectionLevel="signature" />

    <uses-permission android:name="${applicationId}.permission.MIPUSH_RECEIVE" />
    <uses-permission android:name="android.permission.VIBRATE" />

    <application>
        <meta-data
            android:name="com.huawei.hms.client.appid"
            android:value="appid=${huaweiPushAppId}" />

        <meta-data
            android:name="com.xiaomi.push.appid"
            android:value="\${xiaomiPushAppId}" />
        <meta-data
            android:name="com.xiaomi.push.appkey"
            android:value="\${xiaomiPushAppKey}" />

        <!-- 接入HMSSDK 需要注册的provider，authorities 一定不能与其他应用一样-->
        <provider
            android:name="com.huawei.hms.update.provider.UpdateProvider"
            android:authorities="${applicationId}.hms.update.provider"
            android:exported="false"
            android:grantUriPermissions="true"/>

        <!-- 接入HMSSDK 需要注册的provider，authorities 一定不能与其他应用一样-->
        <provider
            android:name="com.huawei.updatesdk.fileprovider.UpdateSdkFileProvider"
            android:authorities="${applicationId}.updateSdk.fileProvider"
            android:exported="false"
            android:grantUriPermissions="true" />

<!--        <provider-->
<!--            android:name="com.huawei.hms.support.api.push.PushProvider"-->
<!--            android:authorities="${applicationId}.huawei.push.provider"-->
<!--            android:exported="true"-->
<!--            android:permission="${applicationId}.permission.PUSH_PROVIDER"-->
<!--            android:readPermission="${applicationId}.permission.PUSH_PROVIDER"-->
<!--            android:writePermission="${applicationId}.permission.PUSH_WRITE_PROVIDER" />-->

        <!-- 使用 HMSAgent 代码接入HMSSDK 需要注册的activity | Use hmsagent code to access HMSSDK activity that requires registration-->
        <activity
            android:name="com.huawei.android.hms.agent.common.HMSAgentActivity"
            android:configChanges="orientation|locale|screenSize|layoutDirection|fontScale"
            android:excludeFromRecents="true"
            android:exported="false"
            android:hardwareAccelerated="true"
            android:theme="@android:style/Theme.Translucent" >
            <meta-data
                android:name="hwc-theme"
                android:value="androidhwext:style/Theme.Emui.Translucent" />
        </activity>


        <!-- 接入HMSSDK 需要注册的activity | Access HMSSDK activity to be registered-->
        <activity
            android:name="com.huawei.hms.activity.BridgeActivity"
            android:configChanges="orientation|locale|screenSize|layoutDirection|fontScale"
            android:excludeFromRecents="true"
            android:exported="false"
            android:hardwareAccelerated="true"
            android:theme="@android:style/Theme.Translucent" >
            <meta-data
                android:name="hwc-theme"
                android:value="androidhwext:style/Theme.Emui.Translucent" />
        </activity>

        <!-- 接入HMSSDK 需要注册的activity | Access HMSSDK activity to be registered-->
        <activity
            android:name="com.huawei.updatesdk.service.otaupdate.AppUpdateActivity"
            android:configChanges="orientation|screenSize"
            android:exported="false"
            android:theme="@style/upsdkDlDialog" >
            <meta-data
                android:name="hwc-theme"
                android:value="androidhwext:style/Theme.Emui.Translucent.NoTitleBar" />
        </activity>

        <!-- 接入HMSSDK 需要注册的activity | Access HMSSDK activity to be registered-->
        <activity
            android:name="com.huawei.updatesdk.support.pm.PackageInstallerActivity"
            android:configChanges="orientation|keyboardHidden|screenSize"
            android:exported="false"
            android:theme="@style/upsdkDlDialog" >
            <meta-data
                android:name="hwc-theme"
                android:value="androidhwext:style/Theme.Emui.Translucent" />
        </activity>

        <!-- 接入HMSSDK 游戏需要注册的activity | Activity to register when accessing HMSSDK game module using hmsagent code-->
<!--        <activity-->
<!--            android:name="com.huawei.appmarket.component.buoycircle.impl.delegete.BuoyBridgeActivity"-->
<!--            android:configChanges="orientation|locale|screenSize|layoutDirection|fontScale"-->
<!--            android:excludeFromRecents="true"-->
<!--            android:exported="false"-->
<!--            android:hardwareAccelerated="true"-->
<!--            android:theme="@android:style/Theme.Translucent">-->
<!--            <meta-data-->
<!--                android:name="hwc-theme"-->
<!--                android:value="androidhwext:style/Theme.Emui.Translucent" />-->
<!--        </activity>-->


        <!-- 接入HMSSDK PUSH模块需要注册，第三方相关 :接收Push消息（注册、透传消息、通知栏点击事件）广播，
                此receiver类需要开发者自己创建并继承com.huawei.hms.support.api.push.PushReceiver类，
                参考示例代码中的类：com.huawei.hmsagent.HuaweiPushRevicer-->
        <receiver android:name=".HuaweiPushReceiver"
            android:permission="${applicationId}.permission.PROCESS_PUSH_MSG">
            <intent-filter>
                <!-- 必须,用于接收token -->
                <action android:name="com.huawei.android.push.intent.REGISTRATION" />
                <!-- 必须, 用于接收透传消息 -->
                <action android:name="com.huawei.android.push.intent.RECEIVE" />
                <!-- 必须, 用于接收通知栏消息点击事件 此事件不需要开发者处理，只需注册就可以-->
                <action android:name="com.huawei.intent.action.PUSH_DELAY_NOTIFY"/>
            </intent-filter>
        </receiver>

        <!--如下2个通知会在以后的版本中逐渐废弃
            接入HMSSDK PUSH模块需要注册，第三方相关 :接收Push消息（点击通知栏或通知栏上的按钮后触发onEvent回调、查看push通道是否连接）广播，
                此receiver类需要开发者自己创建并继承com.huawei.hms.support.api.push.PushReceiver类-->
<!--        <receiver android:name="xxxx">-->
<!--            <intent-filter>-->
<!--                &lt;!&ndash; 用于点击通知栏或通知栏上的按钮后触发onEvent回调 &ndash;&gt;-->
<!--                <action android:name="com.huawei.android.push.intent.CLICK" />-->
<!--                &lt;!&ndash; 查看push通道是否连接, 不查看则不需要 &ndash;&gt;-->
<!--                <action android:name="com.huawei.intent.action.PUSH_STATE"/>-->
<!--            </intent-filter>-->
<!--        </receiver>-->

        <!--接入HMSSDK PUSH模块需要注册该service，不需要开发者处理-->
        <service
            android:name="com.huawei.hms.support.api.push.service.HmsMsgService"
            android:enabled="true"
            android:exported="true"
            android:process=":pushservice">
            <intent-filter>
                <action android:name="com.huawei.push.msg.NOTIFY_MSG" />
                <action android:name="com.huawei.push.msg.PASSBY_MSG" />
            </intent-filter>
        </service>


        <!-- 接入HMSSDK 需要注册的应用下载服务 | Access HMSSDK need to register app download service-->
        <service android:name="com.huawei.updatesdk.service.deamon.download.DownloadService"
            android:exported="false"/>


        <activity
            android:name=".PermissionActivity"
            android:theme="@style/PermissionDialog"
            android:label="" />

        <!--小米推送服务-->
        <service
            android:name="com.xiaomi.push.service.XMJobService"
            android:enabled="true"
            android:exported="false"
            android:permission="android.permission.BIND_JOB_SERVICE"
            android:process=":pushservice" />

        <service
            android:name="com.xiaomi.push.service.XMPushService"
            android:enabled="true"
            android:process=":pushservice" />

        <service
            android:name="com.xiaomi.mipush.sdk.PushMessageHandler"
            android:enabled="true"
            android:exported="true" />
        <service
            android:name="com.xiaomi.mipush.sdk.MessageHandleService"
            android:enabled="true" />

        <receiver
            android:name="com.xiaomi.push.service.receivers.NetworkStatusReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.xiaomi.push.service.receivers.PingReceiver"
            android:exported="false"
            android:process=":pushservice">
            <intent-filter>
                <action android:name="com.xiaomi.push.PING_TIMER" />
            </intent-filter>
        </receiver>

        <receiver android:name=".MiPushReceiver">
            <intent-filter>
                <action android:name="com.xiaomi.mipush.RECEIVE_MESSAGE" />
                <action android:name="com.xiaomi.mipush.MESSAGE_ARRIVED" />
                <action android:name="com.xiaomi.mipush.ERROR" />
            </intent-filter>
        </receiver>
    </application>
</manifest>